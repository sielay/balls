{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/index.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","root","animateBall","span","x","y","speed","angle","topHeight","drawScreen","screenHeight","ball","radius","velocityx","velocityy","limit","gravity","style","top","left","requestAnimationFrame","radians","Math","PI","cos","sin","size","drawBall","document","createElement","random","position","width","height","borderRadius","display","backgroundColor","window"],"mappings":"CAAA,SAAAA,EAAAC,EAAAC,EAAAC,GAAA,SAAAC,EAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,IAAAE,EAAA,mBAAAC,SAAAA,QAAA,IAAAF,GAAAC,EAAA,OAAAA,EAAAF,GAAA,GAAA,GAAAI,EAAA,OAAAA,EAAAJ,GAAA,GAAA,IAAAK,EAAA,IAAAC,MAAA,uBAAAN,EAAA,KAAA,MAAAK,EAAAE,KAAA,mBAAAF,EAAA,IAAAG,EAAAX,EAAAG,IAAAS,YAAAb,EAAAI,GAAA,GAAAU,KAAAF,EAAAC,QAAA,SAAAd,GAAA,IAAAE,EAAAD,EAAAI,GAAA,GAAAL,GAAA,OAAAI,EAAAF,GAAAF,IAAAa,EAAAA,EAAAC,QAAAd,EAAAC,EAAAC,EAAAC,GAAA,OAAAD,EAAAG,GAAAS,QAAA,IAAA,IAAAL,EAAA,mBAAAD,SAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAa,OAAAX,IAAAD,EAAAD,EAAAE,IAAA,OAAAD,EAAA,EAAAa,GAAA,SAAAT,EAAAU,EAAAJ,iBCAA,SAAWK,GA6BP,SAASC,EAAYC,EAAMC,EAAGC,EAAGC,EAAOC,EAAOC,GAO3C,SAASC,IAEL,IAAMC,EAAeF,EAErB,KAAIG,EAAKN,EAAIM,EAAKC,QAAUF,GAWxB,OARAC,EAAKE,UAAY,EACjBF,EAAKG,UAAY,EACjBH,EAAKN,EAAIK,EAAeC,EAAKC,aAE7BN,GAAS,IACGS,GACRb,EAAYC,EAAMQ,EAAKP,EAAGO,EAAKN,EAAGC,EAAOC,IAR7CI,EAAKG,WAAaE,EAatBL,EAAKN,GAAKM,EAAKG,UACfH,EAAKP,GAAKO,EAAKE,UAEfV,EAAKc,MAAMC,IAAMP,EAAKN,EAAI,KAC1BF,EAAKc,MAAME,KAAOR,EAAKP,EAAI,KAE3BgB,sBAAsB,WAClBX,MA9BR,IAAMY,EAAUd,EAAQe,KAAKC,GAAK,IAG5BZ,GAASP,EAAGA,EAAGC,EAAGA,EAAGQ,UAFhBS,KAAKE,IAAIH,GAAWf,EAEWQ,UAD/BQ,KAAKG,IAAIJ,GAAWf,EAC0BM,OAAQA,GA+BjEH,IA/DJ,IAAMiB,EAAO,GACPV,EAAU,GACVJ,EAAS,GACTG,EAAQ,IA+Ddd,EAAK0B,SAxDL,SAAkBvB,EAAGC,EAAGG,GAEpB,IAAML,EAAOyB,SAASC,cAAc,QAC9BvB,EAAQ,EAAqB,EAAhBgB,KAAKQ,SAClBvB,EAAQ,IAAuB,IAAhBe,KAAKQ,SAU1B,OARA3B,EAAKc,MAAMc,SAAW,QACtB5B,EAAKc,MAAMe,MAAQN,EAAO,KAC1BvB,EAAKc,MAAMgB,OAASP,EAAO,KAC3BvB,EAAKc,MAAMiB,aAAeR,EAAO,OACjCvB,EAAKc,MAAMkB,QAAU,QACrBhC,EAAKc,MAAMmB,gBAAkB,MAE7BlC,EAAYC,EAAMC,EAAKsB,EAAO,EAAIrB,EAAKqB,EAAO,EAAIpB,EAAOC,EAAOC,GACzDL,GA2CXF,EAAKC,YAAcA,EArEvB,CAuEGmC","file":"index.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","(function (root) {\n\n    const size = 16;\n    const gravity = .1;\n    const radius = 15;\n    const limit = .05;\n\n    /**\n     * Creates and animates ball\n     * @param {number} x \n     * @param {number} y \n     */\n    function drawBall(x, y, topHeight) {\n\n        const span = document.createElement('span');\n        const speed = 1 + (Math.random() * 4);\n        const angle = 180 + (Math.random() * 180);\n\n        span.style.position = 'fixed';\n        span.style.width = size + 'px';\n        span.style.height = size + 'px';\n        span.style.borderRadius = size + '16px';\n        span.style.display = 'block';\n        span.style.backgroundColor = 'red';\n\n        animateBall(span, x - (size / 2), y - (size / 2), speed, angle, topHeight);\n        return span;\n    }\n\n    function animateBall(span, x, y, speed, angle, topHeight) {\n\n        const radians = angle * Math.PI / 180;\n        const vx = Math.cos(radians) * speed;\n        const vy = Math.sin(radians) * speed;\n        const ball = { x: x, y: y, velocityx: vx, velocityy: vy, radius: radius };\n\n        function drawScreen() {\n\n            const screenHeight = topHeight;\n\n            if (ball.y + ball.radius <= screenHeight) {\n                ball.velocityy += gravity;\n            } else {\n                ball.velocityx = 0;\n                ball.velocityy = 0;\n                ball.y = screenHeight - ball.radius;\n\n                speed *= 0.9;\n                if (speed > limit) {\n                    animateBall(span, ball.x, ball.y, speed, angle);\n                }\n                return;\n            }\n\n            ball.y += ball.velocityy;\n            ball.x += ball.velocityx;\n\n            span.style.top = ball.y + 'px';\n            span.style.left = ball.x + 'px';\n\n            requestAnimationFrame(() => {\n                drawScreen();\n            });\n\n        }\n        drawScreen();\n    }\n\n    root.drawBall = drawBall;\n    root.animateBall = animateBall;\n\n})(window);"]}